@page "/Gatos"
@inject HttpClient Http
@inject IJSRuntime jsr

<PageTitle>Gatos</PageTitle>

@if (CatArray != null)
{
	<MudGrid Justify="Justify.FlexStart">
		@foreach(var cat in CatArray)
		{
			<MudItem xs="3">
				<MudCard>			
					<MudCarousel Class="mud-width-full rounded-top" Style="height:200px;" ShowArrows="true" ShowBullets="true" EnableSwipeGesture="true" AutoCycle="false" TData="object">
						<MudCarouselItem Transition="Transition.Fade" Color="@Color.Primary">
							<div class="d-flex" style="height:100%">
								<MudImage src="images/1_1.jpg"></MudImage>
							</div>							
						</MudCarouselItem>
						<MudCarouselItem Transition="Transition.Fade" Color="@Color.Secondary">
							<div class="d-flex" style="height:100%">
								<MudImage src="images/1_2.jpg"></MudImage>
							</div>
						</MudCarouselItem>
					</MudCarousel>	
					<MudCardContent>
						<MudText Typo="Typo.h6">@cat.Name</MudText>
						<MudText>@(CatService?.CalculateCatAge(cat)["Years"].ToString()) años y @(CatService?.CalculateCatAge(cat)["Months"].ToString()) meses</MudText>
						<MudText>@(cat.IsVaccinated == true ? "✅" : "❌") Vacunado</MudText>
						<MudText>@(cat.IsSterilized == true ? "✅" : "❌") Esterilizado</MudText>
						<MudText>@(cat.HasChip == true ? "✅" : "❌") Con chip</MudText>
					</MudCardContent>
				</MudCard>
			</MudItem>
		}
	</MudGrid>
}



@code {
	[Inject]
	public ICatService? CatService { get; set; }

	[Inject]
	public IDateTimeServer? DateTimeServer { get; set; }

	public IEnumerable<Cat>? CatArray;

	protected override async Task OnInitializedAsync()
	{
		string authToken = "";
		var userdata = await jsr.InvokeAsync<string>("localStorage.getItem", "user").ConfigureAwait(false);
		if (!string.IsNullOrWhiteSpace(userdata))
		{
			var dataArray = userdata.Split(';', 2);
			if (dataArray.Length == 2)
				 authToken = dataArray[1];
		}
		Http.DefaultRequestHeaders.Add("Authorization", $"Bearer {authToken}");
		CatArray = await Http.GetFromJsonAsync<IEnumerable<Cat>>("/api/Cats");
	}
}