@page "/Gatos"
@inject HttpClient Http
@inject IJSRuntime jsr

<PageTitle>Gatos</PageTitle>

@if (CatArray != null)
{
	<div style="display: grid; grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));">
		@foreach (var cat in CatArray)
		{
			 
		
				<MudCard Style="width:200px">			
					<MudCarousel Class="mud-width-full rounded-top" Style="height:200px" ShowArrows="true" ShowBullets="true" EnableSwipeGesture="true" AutoCycle="false" TData="object">
						@foreach(var image in cat.Photos){
							<MudCarouselItem Transition="Transition.Fade" Color="@Color.Primary">
							<div class="d-flex">
								<MudImage src="@GetImageSrc(image)" Style="object-fit:contain;width:100%;height:100%"></MudImage>
							</div>							
							</MudCarouselItem>
						}
					</MudCarousel>	
					<MudCardContent>
						<MudText Typo="Typo.h6">@cat.Name</MudText>
						<MudText>@(CatService?.CalculateCatAge(cat)["Years"].ToString()) años y @(CatService?.CalculateCatAge(cat)["Months"].ToString()) meses</MudText>
						<MudText>@(cat.IsVaccinated == true ? "✅" : "❌") Vacunado</MudText>
						<MudText>@(cat.IsSterilized == true ? "✅" : "❌") Esterilizado</MudText>
						<MudText>@(cat.HasChip == true ? "✅" : "❌") Con chip</MudText>
					</MudCardContent>
				</MudCard>
		}
	</div>		
}



@code {
	[Inject]
	public ICatService? CatService { get; set; }

	[Inject]
	public IDateTimeServer? DateTimeServer { get; set; }

	public IEnumerable<Cat>? CatArray;

	protected override async Task OnInitializedAsync()
	{
		CatArray = await Http.GetFromJsonAsync<IEnumerable<Cat>>("/api/Cats");
	}

	public string GetImageSrc(CatPhoto image)
	{
		if (image != null && image.Bytes != null) return "data:image/jpeg;base64," + Convert.ToBase64String(image.Bytes);
		else return "";
	}

}